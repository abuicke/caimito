/*
 *
 *
 * Gradle publish fails to PUT a different random file to s01.oss.sonatype.org/service/local/staging/deploy/maven2
 * each time. The library can eventually be published if you manage to push a version that's missing
 * a non-critical file https://stackoverflow.com/questions/78245036/.
 *
 * */
apply plugin: 'maven-publish'
apply plugin: 'signing'

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'dev.gravitycode.caimito'
                artifactId = 'caimito'
                version = '2.0.2'

                // Specify the components to publish
                from components.release

                pom {
                    name = 'caimito'
                    description = 'A small library of helpful classes for working with Android'
                    url = 'https://github.com/abuicke/caimito'

                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }

                    developers {
                        developer {
                            id = 'adambuicke'
                            name = 'Adam Buicke'
                            email = 'buickea@gmail.com'
                        }
                    }

                    scm {
                        connection = 'scm:git:github.com/abuicke/caimito.git'
                        developerConnection = 'scm:git:ssh://github.com/abuicke/caimito.git'
                        url = 'https://github.com/abuicke/caimito'
                    }
                }
            }
        }

        // Repository configuration
        repositories {
            maven {
                url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")

                credentials {
                    username = project.findProperty("ossrhUsername")
                    password = project.findProperty("ossrhPassword")
                }
            }
        }
    }

    // Signing configuration (if required)
    signing {
        sign publishing.publications.release
    }
}